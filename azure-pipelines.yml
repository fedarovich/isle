# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-2022

parameters:
  - name: IsRelease
    displayName: 'Is Release'
    default: false
    type: boolean

variables:
  BuildConfiguration: 'Release'
  MajorVersion: 1
  MinorVersion: 0
  ${{ if eq(parameters.IsRelease, false) }}:
    Suffix: 'pre' 
  ${{ else }}:
    Suffix: ''

name: '$(MajorVersion).$(MinorVersion).$(rev:r)'

steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: 'src/Isle/Isle.sln'
    arguments: '-c $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: build    
    projects: 'src/Isle/Isle.sln'
    arguments: '-c $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: 'src/Isle/Isle.sln'
    arguments: '-c $(BuildConfiguration)'
    nobuild: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Isle.Core'
  inputs:
    command: pack
    projects: 'src/Isle/Isle.Core/Isle.Core.csproj'
    arguments: '-c $(BuildConfiguration) -p:VersionPrefix=$(MajorVersion).$(MinorVersion).$(rev:r) --version-suffix "$(Suffix)"'
    includesymbols: true
    nobuild: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Isle.Extensions.Logging'
  inputs:
    command: pack
    projects: 'src/Isle/Isle.Extensions.Logging/Isle.Extensions.Logging.csproj'
    arguments: '-c $(BuildConfiguration) -p:VersionPrefix=$(MajorVersion).$(MinorVersion).$(rev:r) --version-suffix "$(Suffix)"'
    includesymbols: true
    nobuild: true

- task: PublishBuildArtifacts@1